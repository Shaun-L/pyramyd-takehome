Test Cases:
"CRM", Capabilities: ['Contact Management', 'Sales Automation'] (Expected: Desktop Sales Office)
"CRM", Capabilities: ['Client Management', 'Invoice Management'] (Expected: Solid Performers CRM)
"Email Marketing", Capabilities: ['Cloud based'] (Expected: webCRM)
"CRM", Capabilities: [] (Expected: NO ERRORS)
"CRM", Capabilities: ['Open Source'] (Expected: EspoCRM)
"CRM", Capabilities: ['Call Reporting', 'Voicemail transcription'] (Expected: Zimplu CRM)
"Pricing", Capabilities: [] (Expected: NeoCRM)

README Notes: 
Bring up qualms about software category, how we can only choose one, not two since the example query
says so. and also how I assume that this field will be typed in correctly, there is no semantic portion.
This is because I assume that companies select this as like a dropdown option, how there is no Place for mistakes

I used empirical testing to find the best thresholds (having target vendors, and seeing what the returned similarity is)

Though process for Similarity Scoring Threshold balancing: High recall > High Precision. Ideally, we would strive for the perfect balance, but to cushion ourselves,
the recall being higher is fine since we want to be a decent amount of vendors to choose from when it comes to rating. Realistically, we are being
hindered by the small size of he current dataset. This threshold would most likely be shifted upwards in a larger dataset to account for more irrelevant data,
and therefore lowering the compute time.

tested it but avoiding the usage TF-IDF due to its lack of capturing in semantic meaning. 

Another issue I had was trying to avoid bias in simlarity matching if a company was missing specific columns, until I came to the realization that
that can't be avoided as long as we are looking at this singular stream of data as our reference. This shifted my lens to try not to overadjust for
NA values since it cannot be avoided. The only way we could avoid it would be to get more data on the specific company through other means. 

docker instructions:
- docker build -t vendor-qualification-app .
- docker run -p 5000:5000 vendor-qualification-app

